@using YummyDrop_online_store.Services.CartService;
@using YummySharedLibrary;
@using YummyDrop_online_store.Services.BalanceService;
@using YummyDrop_online_store.Services.BonusService;

@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject ICartService CartService
@inject IBalanceService BalanceService;
@inject IBonusService BonusService;

<PageTitle>YummyDrop_online_store</PageTitle>


<head>
    <link rel="stylesheet" href="css/cart.css">
</head>


<div class="page">
    <div class="sidebar">
        <NavMenu />


    </div>


    <main>
        <div class="top-row px-4 d-flex">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>

            <div>
                <a href="/account-balance-page" style="text-decoration: none;">Bonuses @BonusService.Bonus</a>
                <a>Balance $@BalanceService.Balance</a>
            </div>

            <div class="cart">
                <a href="/cart" style="text-decoration: none;">
                    <img src="/cart.png" alt="Cart">
                    <span class="cart-count">@CartService.CartItemCount</span>
                </a>
            </div>

        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code {


    private void OnCartClick()
    {
        NavigationManager.NavigateTo("/cart");
    }

    protected override void OnInitialized()
    {
        CartService.CartUpdated += OnCartUpdated;
        BalanceService.BalanceUpdated += OnBalanceUpdated;
        BonusService.BonusUpdated += OnBonusUpdated;

        //var len = Cart.getLengthCart();
        //CartService.UpdateCartItemCount(len);
    }
    private void OnCartUpdated(object sender, EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    private void OnBalanceUpdated(object sender, EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }


    private void OnBonusUpdated(object sender, EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }
    
}
